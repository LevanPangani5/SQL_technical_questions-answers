autput for every date how many new users and how many old users made a purchase
script:
create table customer_orders (
order_id integer,
customer_id integer,
order_date date,
order_amount integer
);
select * from customer_orders
insert into customer_orders values(1,100,cast('2022-01-01' as date),2000),(2,200,cast('2022-01-01' as date),2500),(3,300,cast('2022-01-01' as date),2100)
,(4,100,cast('2022-01-02' as date),2000),(5,400,cast('2022-01-02' as date),2200),(6,500,cast('2022-01-02' as date),2700)
,(7,100,cast('2022-01-03' as date),3000),(8,400,cast('2022-01-03' as date),1000),(9,600,cast('2022-01-03' as date),3000)


shortest solution:
select order_date ,
sum(case when order_date=first_visit then 1 else 0 end) as first_visit,
sum(case when order_date !=first_visit then 1 else 0 end) as repeated_visit,
from(
select *  ,
min(order_date) over(partition by customer_id order by order_date) as first_visit
from customer_orders) f
group by order_date
----------------------------
solutions:
with cte as(select *,
row_number() over (partition BY customer_id order by order_date ) as rn
from customer_orders)
,cte2 as(
select order_date,
case when rn=1 then count(1) end as first_visit,
case when rn !=1 then count(1) end as repeated_visit
from cte
group by order_date, rn)
select order_date, sum(first_visit) as first_visit, isnull(sum(repeated_visit),0) as repeated_visit
from cte2
group by order_date
--------------------------------------
solution2:
with cte as(select *,
row_number() over (partition by customer_id order by order_date)as rn
from customer_orders)
,cte2 as(
select order_date,
case  when rn=1 then 1 else 0 end as first_visit,
case when rn !=1 then 1 else 0 end as repeated_visit
 from cte
 )

 select order_date, sum(first_visit) as first_visit, sum(repeated_visit) as repeated_visit
 from cte2
 group by order_date

--------------------------
solution joins:
with cte as (
select  customer_id, min(order_date)as first_visit  from customer_orders
group by customer_id
)
select co.order_date,
sum(case when co.order_date= c.first_visit then 1 else 0 end) as first_visit,
sum(case when co.order_date != c.first_visit then 1 else 0 end) as repeated_visit
from customer_orders co
inner join cte c on c.customer_id=co.customer_id
group by co.order_date


